name: Nginx CI / CD

# Условия (триггеры) запуска пайплайна
on:
  push:                # При коммите в ветку "dev"
    branches: ["dev"]
  pull_request:        # При закрытии Pull Request в ветку "main" (Не важно утвержденный или нет. Надо будет дописать в условиях джобы)
    branches: ["main"]
    types: [ closed ]

jobs:
  test-and-build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t nginx:dev .

      - name: Run nginx container for testing
        run: |
          docker run -d -p 8080:80 nginx:dev

      - name: Test nginx is running
        run: |
          curl -f http://localhost:8080 || exit 1

      # - name: Push image to server (dev)
      #   if: github.ref == 'refs/heads/dev'
      #   run: |
      #     ssh -i ${{ secrets.INSTANCE_PRIVATE_KEY }} ${{ secrets.USERNAME }}@${{ secrets.IP }}  "docker pull nginx:dev || true"
      #     docker save nginx:dev | bzip2 | ssh -i ${{ secrets.INSTANCE_PRIVATE_KEY }} user@server 'bunzip2 | docker load'

  
  # deploy:
  #   if: github.event.pull_request.merged == true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to production server
  #       run: |
  #         ssh -i ${{ secrets.SSH_KEY }} user@server "docker stop nginx-container || true"
  #         ssh -i ${{ secrets.SSH_KEY }} user@server "docker rm nginx-container || true"
  #         ssh -i ${{ secrets.SSH_KEY }} user@server "docker rmi nginx:prod || true"
  #         ssh -i ${{ secrets.SSH_KEY }} user@server "docker tag nginx:dev nginx:prod"
  #         ssh -i ${{ secrets.SSH_KEY }} user@server "docker run -d --name nginx-container -p 80:80 nginx:prod"




